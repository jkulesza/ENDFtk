
cmake_minimum_required( VERSION 3.2 )
set( CMAKE_CONFIGURATION_TYPES "Debug;Release" CACHE STRING "Supported configuration types" FORCE )
set( ROOT_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR} )

project( ENDFtk LANGUAGES CXX )
get_directory_property( is_subproject PARENT_DIRECTORY )
include( CMakeDependentOption REQUIRED )

set( ENDFtk_AppleClang_minimum_version 8.0 )
set( ENDFtk_GNU_minimum_version 6.2 )
set( ENDFtk_Clang_minimum_version 3.8 )

if( ENDFtk_${CMAKE_CXX_COMPILER_ID}_minimum_version )
    if( CMAKE_CXX_COMPILER_VERSION AND
        CMAKE_CXX_COMPILER_VERSION VERSION_LESS
        ${ENDFtk_${CMAKE_CXX_COMPILER_ID}_minimum_version} )
        message( FATAL_ERROR "${CMAKE_CXX_COMPILER_ID} version must be greater than ${ENDFtk_${CMAKE_CXX_COMPILER_ID}_minimum_version}" )
    endif()
endif()

# general properties
option( ENDFtk_strict "Compile time warnings are converted to errors" ON )

# binary instrumentation
option( coverage "Enable binary instrumentation to collect test coverage information in the DEBUG configuration" )
option( profile_generate "Enable binary instrumentation to generation execution profiles in the RELEASE configuration which may be used to guide later optimization" )

# additional optimizations
option( link_time_optimization "Enable link time optimization in the RELEASE configuration" )
option( profile_use "In the RELEASE configuration, leverage previously generated execution profile to inform optimization decisions" )
option( nonportable_optimization "Enable optimizations which compromise portability of resulting binary in the RELEASE configuration" )

# libraries and linking
option( static "Statically link component and environment libraries" OFF )
if ( static AND ( "${CMAKE_SYSTEM_NAME}" STREQUAL "Darwin" ) )
    message( FATAL_ERROR "Static binaries not supported on OSX" )
endif()

CMAKE_DEPENDENT_OPTION( static_libraries "Statically link component libraries" OFF "NOT static" ON )

option( unit_tests "Compile the ENDFtk unit tests and integrate with ctest" ON ) 

if ( profile_generate AND profile_use )
    message( FATAL_ERROR "Cannot both generate and use execution profile in the same configuration" )
endif()

if ( profile_generate )
    file( MAKE_DIRECTORY "${CMAKE_BINARY_DIR}/profiling" )
endif()

set( ENDFtk_AppleClang_Darwin_common_flags "-stdlib=libc++" "-Wall" "-Wextra" "-Wpedantic" "-std=c++17" )
set( ENDFtk_AppleClang_Darwin_DEBUG_flags "-O0" "-g" "-gdwarf-3" )
set( ENDFtk_AppleClang_Darwin_RELEASE_flags "-O3" "-DNDEBUG" )
set( ENDFtk_AppleClang_Darwin_strict_flags "-Werror" )
set( ENDFtk_AppleClang_Darwin_coverage_flags "--coverage" )
set( ENDFtk_AppleClang_Darwin_subproject_flags  )
set( ENDFtk_AppleClang_Darwin_base_project_flags  )
set( ENDFtk_AppleClang_Darwin_profile_generate_flags "-fprofile-generate='${CMAKE_BINARY_DIR}/profiling'" )
set( ENDFtk_AppleClang_Darwin_link_time_optimization_flags "-flto" )
set( ENDFtk_AppleClang_Darwin_profile_use_flags "-fprofile-use='${CMAKE_BINARY_DIR}/profiling'" )
set( ENDFtk_AppleClang_Darwin_nonportable_optimization_flags "-march=native" )
set( ENDFtk_AppleClang_Darwin_static_flags "-static" )
set( ENDFtk_GNU_Windows_common_flags "-Wno-subobject-linkage" "-Wall" "-Wextra" "-Wpedantic" "-std=c++17" )
set( ENDFtk_GNU_Windows_DEBUG_flags "-O0" "-g" "-gdwarf-3" "-fsignaling-nans" )
set( ENDFtk_GNU_Windows_RELEASE_flags "-O3" "-DNDEBUG" )
set( ENDFtk_GNU_Windows_strict_flags "-Werror" )
set( ENDFtk_GNU_Windows_coverage_flags "--coverage" )
set( ENDFtk_GNU_Windows_subproject_flags  )
set( ENDFtk_GNU_Windows_base_project_flags  )
set( ENDFtk_GNU_Windows_profile_generate_flags "-fprofile-generate='${CMAKE_BINARY_DIR}/profiling'" )
set( ENDFtk_GNU_Windows_link_time_optimization_flags "-flto" )
set( ENDFtk_GNU_Windows_profile_use_flags "-fprofile-use='${CMAKE_BINARY_DIR}/profiling'" )
set( ENDFtk_GNU_Windows_nonportable_optimization_flags "-march=native" )
set( ENDFtk_GNU_Windows_static_flags "-static" )
set( ENDFtk_GNU_Darwin_common_flags "-Wno-subobject-linkage" "-Wall" "-Wextra" "-Wpedantic" "-std=c++17" )
set( ENDFtk_GNU_Darwin_DEBUG_flags "-O0" "-g" "-gdwarf-3" "-fsignaling-nans" )
set( ENDFtk_GNU_Darwin_RELEASE_flags "-O3" "-DNDEBUG" )
set( ENDFtk_GNU_Darwin_strict_flags "-Werror" )
set( ENDFtk_GNU_Darwin_coverage_flags "--coverage" )
set( ENDFtk_GNU_Darwin_subproject_flags  )
set( ENDFtk_GNU_Darwin_base_project_flags  )
set( ENDFtk_GNU_Darwin_profile_generate_flags "-fprofile-generate='${CMAKE_BINARY_DIR}/profiling'" )
set( ENDFtk_GNU_Darwin_link_time_optimization_flags "-flto" )
set( ENDFtk_GNU_Darwin_profile_use_flags "-fprofile-use='${CMAKE_BINARY_DIR}/profiling'" )
set( ENDFtk_GNU_Darwin_nonportable_optimization_flags "-march=native" )
set( ENDFtk_GNU_Darwin_static_flags "-static" )
set( ENDFtk_GNU_MinGW_common_flags "-Wno-subobject-linkage" "-Wall" "-Wextra" "-Wpedantic" "-std=c++17" )
set( ENDFtk_GNU_MinGW_DEBUG_flags "-O0" "-g" "-gdwarf-3" "-fsignaling-nans" )
set( ENDFtk_GNU_MinGW_RELEASE_flags "-O3" "-DNDEBUG" )
set( ENDFtk_GNU_MinGW_strict_flags "-Werror" )
set( ENDFtk_GNU_MinGW_coverage_flags "--coverage" )
set( ENDFtk_GNU_MinGW_subproject_flags  )
set( ENDFtk_GNU_MinGW_base_project_flags  )
set( ENDFtk_GNU_MinGW_profile_generate_flags "-fprofile-generate='${CMAKE_BINARY_DIR}/profiling'" )
set( ENDFtk_GNU_MinGW_link_time_optimization_flags "-flto" )
set( ENDFtk_GNU_MinGW_profile_use_flags "-fprofile-use='${CMAKE_BINARY_DIR}/profiling'" )
set( ENDFtk_GNU_MinGW_nonportable_optimization_flags "-march=native" )
set( ENDFtk_GNU_MinGW_static_flags "-static" )
set( ENDFtk_GNU_CYGWIN_common_flags "-Wno-subobject-linkage" "-Wall" "-Wextra" "-Wpedantic" "-std=gnu++17" )
set( ENDFtk_GNU_CYGWIN_DEBUG_flags "-O0" "-g" "-gdwarf-3" "-fsignaling-nans" )
set( ENDFtk_GNU_CYGWIN_RELEASE_flags "-O3" "-DNDEBUG" )
set( ENDFtk_GNU_CYGWIN_strict_flags "-Werror" )
set( ENDFtk_GNU_CYGWIN_coverage_flags "--coverage" )
set( ENDFtk_GNU_CYGWIN_subproject_flags  )
set( ENDFtk_GNU_CYGWIN_base_project_flags  )
set( ENDFtk_GNU_CYGWIN_profile_generate_flags "-fprofile-generate='${CMAKE_BINARY_DIR}/profiling'" )
set( ENDFtk_GNU_CYGWIN_link_time_optimization_flags "-flto" )
set( ENDFtk_GNU_CYGWIN_profile_use_flags "-fprofile-use='${CMAKE_BINARY_DIR}/profiling'" )
set( ENDFtk_GNU_CYGWIN_nonportable_optimization_flags "-march=native" )
set( ENDFtk_GNU_CYGWIN_static_flags "-static" )
set( ENDFtk_GNU_Linux_common_flags "-Wno-subobject-linkage" "-Wall" "-Wextra" "-Wpedantic" "-std=c++17" )
set( ENDFtk_GNU_Linux_DEBUG_flags "-O0" "-g" "-gdwarf-3" "-fsignaling-nans" )
set( ENDFtk_GNU_Linux_RELEASE_flags "-O3" "-DNDEBUG" )
set( ENDFtk_GNU_Linux_strict_flags "-Werror" )
set( ENDFtk_GNU_Linux_coverage_flags "--coverage" )
set( ENDFtk_GNU_Linux_subproject_flags  )
set( ENDFtk_GNU_Linux_base_project_flags  )
set( ENDFtk_GNU_Linux_profile_generate_flags "-fprofile-generate='${CMAKE_BINARY_DIR}/profiling'" )
set( ENDFtk_GNU_Linux_link_time_optimization_flags "-flto" )
set( ENDFtk_GNU_Linux_profile_use_flags "-fprofile-use='${CMAKE_BINARY_DIR}/profiling'" )
set( ENDFtk_GNU_Linux_nonportable_optimization_flags "-march=native" )
set( ENDFtk_GNU_Linux_static_flags "-static" )
set( ENDFtk_Clang_Windows_common_flags "-stdlib=libc++" "-Wall" "-Wextra" "-Wpedantic" "-std=c++17" )
set( ENDFtk_Clang_Windows_DEBUG_flags "-O0" "-g" "-gdwarf-3" )
set( ENDFtk_Clang_Windows_RELEASE_flags "-O3" "-DNDEBUG" )
set( ENDFtk_Clang_Windows_strict_flags "-Werror" )
set( ENDFtk_Clang_Windows_coverage_flags "--coverage" )
set( ENDFtk_Clang_Windows_subproject_flags  )
set( ENDFtk_Clang_Windows_base_project_flags  )
set( ENDFtk_Clang_Windows_profile_generate_flags "-fprofile-generate='${CMAKE_BINARY_DIR}/profiling'" )
set( ENDFtk_Clang_Windows_link_time_optimization_flags "-flto" )
set( ENDFtk_Clang_Windows_profile_use_flags "-fprofile-use='${CMAKE_BINARY_DIR}/profiling'" )
set( ENDFtk_Clang_Windows_nonportable_optimization_flags "-march=native" )
set( ENDFtk_Clang_Windows_static_flags "-static" )
set( ENDFtk_Clang_Darwin_common_flags "-stdlib=libc++" "-Wall" "-Wextra" "-Wpedantic" "-std=c++17" )
set( ENDFtk_Clang_Darwin_DEBUG_flags "-O0" "-g" "-gdwarf-3" )
set( ENDFtk_Clang_Darwin_RELEASE_flags "-O3" "-DNDEBUG" )
set( ENDFtk_Clang_Darwin_strict_flags "-Werror" )
set( ENDFtk_Clang_Darwin_coverage_flags "--coverage" )
set( ENDFtk_Clang_Darwin_subproject_flags  )
set( ENDFtk_Clang_Darwin_base_project_flags  )
set( ENDFtk_Clang_Darwin_profile_generate_flags "-fprofile-generate='${CMAKE_BINARY_DIR}/profiling'" )
set( ENDFtk_Clang_Darwin_link_time_optimization_flags "-flto" )
set( ENDFtk_Clang_Darwin_profile_use_flags "-fprofile-use='${CMAKE_BINARY_DIR}/profiling'" )
set( ENDFtk_Clang_Darwin_nonportable_optimization_flags "-march=native" )
set( ENDFtk_Clang_Darwin_static_flags "-static" )
set( ENDFtk_Clang_MinGW_common_flags "-Wno-subobject-linkage" "-Wall" "-Wextra" "-Wpedantic" "-std=c++17" )
set( ENDFtk_Clang_MinGW_DEBUG_flags "-O0" "-g" "-gdwarf-3" "-fsignaling-nans" )
set( ENDFtk_Clang_MinGW_RELEASE_flags "-O3" "-DNDEBUG" )
set( ENDFtk_Clang_MinGW_strict_flags "-Werror" )
set( ENDFtk_Clang_MinGW_coverage_flags "--coverage" )
set( ENDFtk_Clang_MinGW_subproject_flags  )
set( ENDFtk_Clang_MinGW_base_project_flags  )
set( ENDFtk_Clang_MinGW_profile_generate_flags "-fprofile-generate='${CMAKE_BINARY_DIR}/profiling'" )
set( ENDFtk_Clang_MinGW_link_time_optimization_flags "-flto" )
set( ENDFtk_Clang_MinGW_profile_use_flags "-fprofile-use='${CMAKE_BINARY_DIR}/profiling'" )
set( ENDFtk_Clang_MinGW_nonportable_optimization_flags "-march=native" )
set( ENDFtk_Clang_MinGW_static_flags "-static" )
set( ENDFtk_Clang_CYGWIN_common_flags "-Wno-subobject-linkage" "-Wall" "-Wextra" "-Wpedantic" "-std=gnu++17" )
set( ENDFtk_Clang_CYGWIN_DEBUG_flags "-O0" "-g" "-gdwarf-3" "-fsignaling-nans" )
set( ENDFtk_Clang_CYGWIN_RELEASE_flags "-O3" "-DNDEBUG" )
set( ENDFtk_Clang_CYGWIN_strict_flags "-Werror" )
set( ENDFtk_Clang_CYGWIN_coverage_flags "--coverage" )
set( ENDFtk_Clang_CYGWIN_subproject_flags  )
set( ENDFtk_Clang_CYGWIN_base_project_flags  )
set( ENDFtk_Clang_CYGWIN_profile_generate_flags "-fprofile-generate='${CMAKE_BINARY_DIR}/profiling'" )
set( ENDFtk_Clang_CYGWIN_link_time_optimization_flags "-flto" )
set( ENDFtk_Clang_CYGWIN_profile_use_flags "-fprofile-use='${CMAKE_BINARY_DIR}/profiling'" )
set( ENDFtk_Clang_CYGWIN_nonportable_optimization_flags "-march=native" )
set( ENDFtk_Clang_CYGWIN_static_flags "-static" )
set( ENDFtk_Clang_Linux_common_flags "-stdlib=libstdc++" "-Wall" "-Wextra" "-Wpedantic" "-std=c++17" )
set( ENDFtk_Clang_Linux_DEBUG_flags "-O0" "-g" "-gdwarf-3" )
set( ENDFtk_Clang_Linux_RELEASE_flags "-O3" "-DNDEBUG" )
set( ENDFtk_Clang_Linux_strict_flags "-Werror" )
set( ENDFtk_Clang_Linux_coverage_flags "--coverage" )
set( ENDFtk_Clang_Linux_subproject_flags  )
set( ENDFtk_Clang_Linux_base_project_flags  )
set( ENDFtk_Clang_Linux_profile_generate_flags "-fprofile-generate='${CMAKE_BINARY_DIR}/profiling'" )
set( ENDFtk_Clang_Linux_link_time_optimization_flags "-flto" )
set( ENDFtk_Clang_Linux_profile_use_flags "-fprofile-use='${CMAKE_BINARY_DIR}/profiling'" )
set( ENDFtk_Clang_Linux_nonportable_optimization_flags "-march=native" )
set( ENDFtk_Clang_Linux_static_flags "-static" )
get_directory_property( is_subproject PARENT_DIRECTORY )

if( NOT TARGET fmt-adapter )
    add_subdirectory( ${ROOT_DIRECTORY}/subprojects/fmt-adapter )
endif()

if( NOT TARGET range-v3-adapter )
    add_subdirectory( ${ROOT_DIRECTORY}/subprojects/range-v3-adapter )
endif()

if( NOT TARGET spdlog-adapter )
    add_subdirectory( ${ROOT_DIRECTORY}/subprojects/spdlog-adapter )
endif()

if( NOT TARGET hana-adapter )
    add_subdirectory( ${ROOT_DIRECTORY}/subprojects/hana-adapter )
endif()

if( NOT TARGET catch-adapter )
    add_subdirectory( ${ROOT_DIRECTORY}/subprojects/catch-adapter )
endif()

if( NOT TARGET Log )
    add_subdirectory( ${ROOT_DIRECTORY}/subprojects/Log )
endif()

if( NOT TARGET header-utilities )
    add_subdirectory( ${ROOT_DIRECTORY}/subprojects/header-utilities )
endif()

if( NOT TARGET disco )
    add_subdirectory( ${ROOT_DIRECTORY}/subprojects/disco )
endif()


if ( NOT GIT_EXECUTABLE )
    find_package( Git )
    if ( NOT GIT_FOUND )
        message( FATAL_ERROR "git installation was not found." )
    endif()
endif()

execute_process(
    COMMAND ${GIT_EXECUTABLE} rev-parse --abbrev-ref HEAD
    WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}
    OUTPUT_VARIABLE GIT_BRANCH
    OUTPUT_STRIP_TRAILING_WHITESPACE
)
execute_process(
    COMMAND ${GIT_EXECUTABLE} rev-parse HEAD
    WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}
    OUTPUT_VARIABLE GIT_HASH
    OUTPUT_STRIP_TRAILING_WHITESPACE
) 

message( STATUS "" )
message( STATUS "-----------------------------------------------------------" )
message( STATUS "" )
message( STATUS "ENDFtk" )
message( STATUS "Git current branch: ${GIT_BRANCH}" )
message( STATUS "Git commit hash: ${GIT_HASH}" )
message( STATUS "" )
message( STATUS "-----------------------------------------------------------" )

add_library( ENDFtk INTERFACE )
target_include_directories( ENDFtk INTERFACE ${CMAKE_CURRENT_BINARY_DIR}/src src/ )

set( PREFIX ENDFtk_${CMAKE_CXX_COMPILER_ID}_${CMAKE_SYSTEM_NAME} )

target_link_libraries( ENDFtk INTERFACE "$<$<AND:$<CONFIG:RELEASE>,$<BOOL:${link_time_optimization}>>:${${PREFIX}_RELEASE_flags};${${PREFIX}_link_time_optimization_flags}$<$<BOOL:${profile_generate}>:${${PREFIX}_profile_generate_flags};>$<$<BOOL:${profile_use}>:${${PREFIX}_profile_use_flags};>$<$<BOOL:${nonportable_optimization}>:${${PREFIX}_nonportable_optimization_flags};>>$<$<CONFIG:DEBUG>:$<$<BOOL:${coverage}>:${${PREFIX}_coverage_flags};>>$<$<BOOL:CXX_appended_flags>:${CXX_appended_flags};>$<$<BOOL:ENDFtk_appended_flags>:${ENDFtk_appended_flags};>" )

target_link_libraries( ENDFtk INTERFACE Log INTERFACE range-v3-adapter INTERFACE header-utilities INTERFACE disco INTERFACE hana-adapter INTERFACE catch-adapter )

enable_testing() 
if ( unit_tests )
    # add_subdirectory( src/ENDFtk/resonanceParameters/unresolved/EnergyIndependent/test )
    # add_subdirectory( src/ENDFtk/section/6/ContinuumEnergyAngle/Tabulated/test )
    # add_subdirectory( src/ENDFtk/section/7/4/ScatteringLawConstants/test )
    # add_subdirectory( src/ENDFtk/syntaxTree/File/test )
    # add_subdirectory( src/ENDFtk/section/4/TabulatedDistributions/test )
    # add_subdirectory( src/ENDFtk/section/8/457/AverageDecayEnergies/test )
    # add_subdirectory( src/ENDFtk/section/5/Subsection/test )
    # add_subdirectory( src/ENDFtk/section/7/2/CoherentElastic/test )
    # add_subdirectory( src/ENDFtk/ListRecord/test )
    # add_subdirectory( src/ENDFtk/resonanceParameters/resolved/RMatrixLimited/ResonanceParameters/test )
    # add_subdirectory( src/ENDFtk/section/5/EffectiveTemperature/test )
    # add_subdirectory( src/ENDFtk/TextRecord/test )
    # add_subdirectory( src/ENDFtk/section/13/PartialCrossSection/test )
    # add_subdirectory( src/ENDFtk/syntaxTree/Section/test )
    # add_subdirectory( src/ENDFtk/resonanceParameters/SpecialCase/test )
    # add_subdirectory( src/ENDFtk/section/12/TotalMultiplicity/test )
    # add_subdirectory( src/ENDFtk/section/6/DiscreteTwoBodyScattering/LegendreCoefficients/test )
    # add_subdirectory( src/ENDFtk/syntaxTree/Material/test )
    # add_subdirectory( src/ENDFtk/section/5/EvaporationSpectrum/test )
    # add_subdirectory( src/ENDFtk/section/6/NoLawDataGiven/test )
    # add_subdirectory( src/ENDFtk/section/6/ChargedParticleElasticScattering/SubSection/test )
    # add_subdirectory( src/ENDFtk/section/7/4/EffectiveTemperature/test )
    # add_subdirectory( src/ENDFtk/section/8/457/DecayModes/test )
    # add_subdirectory( src/ENDFtk/resonanceParameters/unresolved/EnergyDependent/LValue/test )
    # add_subdirectory( src/ENDFtk/resonanceParameters/resolved/RMatrixLimited/ResonanceChannels/test )
    # add_subdirectory( src/ENDFtk/syntaxTree/Tape/test )
    # add_subdirectory( src/ENDFtk/StructureDivision/test )
    # add_subdirectory( src/ENDFtk/section/6/LaboratoryAngleEnergy/AngularDistribution/test )
    # add_subdirectory( src/ENDFtk/section/6/LaboratoryAngleEnergy/EnergyDistribution/test )
    # add_subdirectory( src/ENDFtk/section/13/test )
    # add_subdirectory( src/ENDFtk/section/12/test )
    # add_subdirectory( src/ENDFtk/resonanceParameters/unresolved/EnergyIndependent/LValue/test )
    # add_subdirectory( src/ENDFtk/section/6/ContinuumEnergyAngle/KalbachMann/test )
    # add_subdirectory( src/ENDFtk/section/5/Parameter/test )
    # add_subdirectory( src/ENDFtk/section/7/4/AnalyticalFunctions/test )
    # add_subdirectory( src/ENDFtk/section/6/ContinuumEnergyAngle/LegendreCoefficients/test )
    # add_subdirectory( src/ENDFtk/section/5/test )
    # add_subdirectory( src/ENDFtk/section/4/test )
    # add_subdirectory( src/ENDFtk/section/6/test )
    # add_subdirectory( src/ENDFtk/section/3/test )
    # add_subdirectory( src/ENDFtk/TabulationRecord/test )
    # add_subdirectory( src/ENDFtk/section/12/Multiplicities/test )
    # add_subdirectory( src/ENDFtk/section/12/PartialMultiplicity/test )
    # add_subdirectory( src/ENDFtk/section/7/4/Tabulated/test )
    # add_subdirectory( src/ENDFtk/section/12/TransitionProbabilities/test )
    # add_subdirectory( src/ENDFtk/section/7/2/test )
    # add_subdirectory( src/ENDFtk/record/Base/test )
    # add_subdirectory( src/ENDFtk/record/Tail/test )
    # add_subdirectory( src/ENDFtk/section/7/4/test )
    # add_subdirectory( src/ENDFtk/record/InterpolationBase/test )
    # add_subdirectory( src/ENDFtk/record/Zipper/test )
    # add_subdirectory( src/ENDFtk/resonanceParameters/resolved/RMatrixLimited/test )
    # add_subdirectory( src/ENDFtk/section/5/MaxwellianFissionSpectrum/test )
    # add_subdirectory( src/ENDFtk/section/6/ChargedParticleElasticScattering/NuclearPlusInterference/test )
    # add_subdirectory( src/ENDFtk/resonanceParameters/ScatteringRadius/test )
    # add_subdirectory( src/ENDFtk/section/6/ChargedParticleElasticScattering/test )
    # add_subdirectory( src/ENDFtk/record/test )
    # add_subdirectory( src/ENDFtk/resonanceParameters/resolved/RMatrixLimited/ParticlePairs/test )
    # add_subdirectory( src/ENDFtk/section/6/LaboratoryAngleEnergy/test )
    # add_subdirectory( src/ENDFtk/resonanceParameters/unresolved/EnergyDependent/test )
    # add_subdirectory( src/ENDFtk/section/4/TabulatedDistribution/test )
    # add_subdirectory( src/ENDFtk/InterpolationRecord/test )
    # add_subdirectory( src/ENDFtk/section/Base/test )
    # add_subdirectory( src/ENDFtk/section/1/451/test )
    # add_subdirectory( src/ENDFtk/resonanceParameters/unresolved/EnergyIndependent/JValue/test )
    # add_subdirectory( src/ENDFtk/resonanceParameters/resolved/MultiLevelBreitWigner/test )
    # add_subdirectory( src/ENDFtk/section/4/Isotropic/test )
    # add_subdirectory( src/ENDFtk/section/4/MixedDistributions/test )
    # add_subdirectory( src/ENDFtk/resonanceParameters/Isotope/test )
    # add_subdirectory( src/ENDFtk/resonanceParameters/unresolved/EnergyDependentFissionWidths/test )
    # add_subdirectory( src/ENDFtk/section/12/TransitionProbabilities/Transition/test )
    # add_subdirectory( src/ENDFtk/section/5/WattSpectrum/test )
    # add_subdirectory( src/ENDFtk/section/5/TabulatedSpectrum/OutgoingEnergyDistribution/test )
    # add_subdirectory( src/ENDFtk/section/6/Unknown/test )
    # add_subdirectory( src/ENDFtk/section/6/ContinuumEnergyAngle/Base/test )
    # add_subdirectory( src/ENDFtk/section/5/MadlandNixSpectrum/test )
    # add_subdirectory( src/ENDFtk/section/6/DiscreteTwoBodyScattering/test )
    # add_subdirectory( src/ENDFtk/section/6/ReactionProduct/test )
    # add_subdirectory( src/ENDFtk/section/4/LegendreCoefficients/test )
    # add_subdirectory( src/ENDFtk/section/6/DiscreteTwoBodyScattering/Tabulated/test )
    # add_subdirectory( src/ENDFtk/section/BaseWithoutMT/test )
    # add_subdirectory( src/ENDFtk/resonanceParameters/unresolved/EnergyDependentFissionWidths/LValue/test )
    # add_subdirectory( src/ENDFtk/section/6/DiscreteTwoBodyScattering/SubSection/test )
    # add_subdirectory( src/ENDFtk/section/6/Multiplicity/test )
    # add_subdirectory( src/ENDFtk/section/6/DiscreteTwoBodyRecoils/test )
    # add_subdirectory( src/ENDFtk/section/6/ChargedParticleElasticScattering/NuclearAmplitudeExpansion/test )
    # add_subdirectory( src/ENDFtk/section/5/GeneralEvaporationSpectrum/test )
    # add_subdirectory( src/ENDFtk/section/6/ContinuumEnergyAngle/SubSection/test )
    # add_subdirectory( src/ENDFtk/resonanceParameters/resolved/RMatrixLimited/SpinGroup/test )
    # add_subdirectory( src/ENDFtk/section/7/2/IncoherentElastic/test )
    # add_subdirectory( src/ENDFtk/section/8/457/DecaySpectrum/test )
    # add_subdirectory( src/ENDFtk/resonanceParameters/resolved/BreitWignerLValue/test )
    # add_subdirectory( src/ENDFtk/resonanceParameters/resolved/ReichMooreLValue/test )
    # add_subdirectory( src/ENDFtk/section/8/457/test )
    # add_subdirectory( src/ENDFtk/section/13/TotalCrossSection/test )
    # add_subdirectory( src/ENDFtk/file/8/test )
    # add_subdirectory( src/ENDFtk/file/7/test )
    # add_subdirectory( src/ENDFtk/section/8/457/DecayMode/test )
    # add_subdirectory( src/ENDFtk/file/2/test )
    # add_subdirectory( src/ENDFtk/file/1/test )
    # add_subdirectory( src/ENDFtk/section/6/DefinedElsewhere/test )
    # add_subdirectory( src/ENDFtk/section/4/LegendreDistributions/test )
    # add_subdirectory( src/ENDFtk/InterpolationSequenceRecord/test )
    # add_subdirectory( src/ENDFtk/section/8/457/ContinuousSpectrum/test )
    # add_subdirectory( src/ENDFtk/ControlRecord/test )
    # add_subdirectory( src/ENDFtk/resonanceParameters/unresolved/EnergyDependentFissionWidths/JValue/test )
    # add_subdirectory( src/ENDFtk/section/2/151/test )
    # add_subdirectory( src/ENDFtk/file/Type/test )
    # add_subdirectory( src/ENDFtk/section/8/457/DiscreteSpectrum/test )
    # add_subdirectory( src/ENDFtk/section/6/NBodyPhaseSpace/test )
    # add_subdirectory( src/ENDFtk/section/6/ContinuumEnergyAngle/test )
    # add_subdirectory( src/ENDFtk/resonanceParameters/resolved/BreitWignerLValue/Resonance/test )
    # add_subdirectory( src/ENDFtk/HeadRecord/test )
    # add_subdirectory( src/ENDFtk/resonanceParameters/resolved/SingleLevelBreitWigner/test )
    # add_subdirectory( src/ENDFtk/section/6/IsotropicDiscreteEmission/test )
    # add_subdirectory( src/ENDFtk/resonanceParameters/unresolved/EnergyDependent/JValue/test )
    # add_subdirectory( src/ENDFtk/section/7/4/Tabulated/ScatteringFunction/test )
    # add_subdirectory( src/ENDFtk/TapeIdentification/test )
    # add_subdirectory( src/ENDFtk/DirectoryRecord/test )
    # add_subdirectory( src/ENDFtk/section/6/ChargedParticleElasticScattering/LegendreCoefficients/test )
    # add_subdirectory( src/ENDFtk/section/5/TabulatedSpectrum/test )
    # add_subdirectory( src/ENDFtk/resonanceParameters/resolved/ReichMoore/test )
    # add_subdirectory( src/ENDFtk/resonanceParameters/resolved/ReichMooreLValue/Resonance/test )
    # add_subdirectory( src/ENDFtk/record/Sequence/test )
    # add_subdirectory( src/ENDFtk/section/5/DistributionFunction/test )
    # add_subdirectory( src/ENDFtk/section/5/PartialProbability/test )

    add_subdirectory( src/ENDFtk/syntaxTree/GendfTape/test )
    add_subdirectory( src/ENDFtk/syntaxTree/GendfMaterial/test )
    add_subdirectory( src/ENDFtk/syntaxTree/GendfSection/test )
    add_subdirectory( src/ENDFtk/section/gendf/test )

endif() 


# python bindings
add_subdirectory( dependencies/pybind11 )
pybind11_add_module( py_ENDFtk python/ENDFtk.py.cpp )
target_link_libraries( py_ENDFtk PUBLIC ENDFtk )
set_target_properties( py_ENDFtk PROPERTIES
                                 OUTPUT_NAME ENDFtk
                                 )
target_compile_options( py_ENDFtk PUBLIC "-std=c++17" )



install( DIRECTORY src// DESTINATION include
         FILE_PERMISSIONS OWNER_READ OWNER_WRITE
                          GROUP_READ
                          WORLD_READ
         DIRECTORY_PERMISSIONS OWNER_READ OWNER_WRITE
                               GROUP_READ
                               WORLD_READ
         FILES_MATCHING REGEX ".*\.h[+][+]$|.*\.hxx$|.*\.hpp$|.*\.hh$|.*\.h$"  )

                    INCLUDE(CPack)
                    
